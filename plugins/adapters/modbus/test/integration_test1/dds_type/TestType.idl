@appendable
enum ShapeFillKind {
  @value(1) SOLID_FILL,
  @value(2) TRANSPARENT_FILL
};
@appendable
struct TestType_pub {
    @optional ShapeFillKind enum_field;
    @optional int32 optional_non_set;
    boolean bool_field;
    boolean bool_array_field[2];
    sequence<boolean,2> bool_seq_field;
    int8 int8_field;
    int8 int8_array_field[2];
    uint8 uint8_field;
    sequence<uint8,2> uint8_seq_field;
    @optional int16 int16_field;
    int16 int16_array_field[2];
    uint16 uint16_field;
    sequence<uint16,2> uint16_seq_field;
    int32 int32_field;
    int32 int32_array_field[2];
    uint32 uint32_field;
    sequence<uint32,2> uint32_seq_field;
    int64 int64_field;
    int64 int64_array_field[2];
    uint64 uint64_field;
    sequence<uint64,2> uint64_seq_field;
    float float_abcd_field;
    float float_abcd_array_field[2];
    float float_badc_field;
    sequence<float,2> float_badc_seq_field;
    float float_cdab_field;
    float float_cdab_array_field[2];
    float float_dcba_field;
    sequence<float,2> float_dcba_seq_field;
};

@appendable
struct TestType_sub {
    TestType_pub test_type;
    string<64> string_constant;
    int8 int8_constant;
    int16 int16_constant;
    int32 int32_constant;
    int64 int64_constant;
    uint8 uint8_constant;
    uint16 uint16_constant;
    uint32 uint32_constant;
    uint64 uint64_constant;
    float float32_constant;
    double float64_constant;
    boolean boolean_constant;
    @optional
      ShapeFillKind input_enum_field;
    @optional
      boolean input_bool_field;
    boolean input_bool_array_field[2];
    sequence<boolean,2> input_bool_seq_field;
    @optional
      int8 input_int8_field;
    int8 input_int8_array_field[2];
    @optional
      uint8 input_uint8_field;
    sequence<uint8,2> input_uint8_seq_field;
    @optional
      int16 input_int16_field;
    int16 input_int16_array_field[2];
    @optional
      uint16 input_uint16_field;
    sequence<uint16,2> input_uint16_seq_field;
    @optional
      int32 input_int32_field;
    int32 input_int32_array_field[2];
    @optional
      uint32 input_uint32_field;
    sequence<uint32,2> input_uint32_seq_field;
    @optional
      int64 input_int64_field;
    int64 input_int64_array_field[2];
    @optional
      uint64 input_uint64_field;
    sequence<uint64,2> input_uint64_seq_field;
    @optional
      float input_float_abcd_field;
    float input_float_abcd_array_field[2];
    @optional
      float input_float_badc_field;
    sequence<float,2> input_float_badc_seq_field;
    float input_float_cdab_field;
    float input_float_cdab_array_field[2];
    float input_float_dcba_field;
    sequence<float,2> input_float_dcba_seq_field;
};

