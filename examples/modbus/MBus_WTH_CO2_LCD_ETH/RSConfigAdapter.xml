<?xml version="1.0" ?>
<!--
  (c) 2020 Copyright, Real-Time Innovations, Inc. (RTI) All rights reserved. 

  RTI grants Licensee a license to use, modify, compile, and create
  derivative works of the software solely for use with RTI Connext DDS.
  Licensee may redistribute copies of the software provided that all such
  copies are subject to this license.
  The software is provided "as is", with no warranty of any type, including
  any warranty for fitness for any purpose. RTI is under no obligation to
  maintain or support the software.  RTI shall not be liable for any
  incidental or consequential damages arising out of the use or inability to
  use the software.
-->

<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="https://community.rti.com/schema/latest/rti_routing_service.xsd">
    <types>
        <struct name="MBus_WTH_CO2_LCD_ETH_WRITE" extensibility="mutable">
            <member name="alarm_sound_on_sec_for_prealarm" type="uint16" optional="true" />
        </struct>
        <struct name= "MBus_WTH_CO2_LCD_ETH_INPUT" extensibility= "mutable">
            <member name="device_name" stringMaxLength="64" type="string" key="true"/>
            <member name="ip_address" type="uint8" arrayDimensions="4"/>
            <member name="temperatureC" type="float32" optional="true"/>
            <member name="temperatureF" type="float32" optional="true"/>
            <member name="humidity" type="float32" optional="true"/>
            <member name="co2_value" type="float32" optional="true"/>
            <member name="analog_output_config" type="int8" optional="true"/>
            <member name="alarm_sound_on_sec_for_prealarm" type="uint16" optional="true"/>
          </struct>
    </types>

    <adapter_library name="AdapterLib">
        <adapter_plugin name="ModbusAdapter">
            <dll>rtimodbusadapter</dll>
            <create_function>ModbusAdapter_create_adapter_plugin</create_function>
        </adapter_plugin>
    </adapter_library>

    <routing_service name="RSModbusAdapterExample">
        <annotation>
            <documentation>
                Write data from DDS to Modbus everytime the specific DDS values
                are updated.
                Also this adapter writes DDS samples synchronously from Modbus
                according to the configuration provided.
            </documentation>
        </annotation>

        <!-- The administration tag enables remote administration, and is 
        required when using Admin Console. -->
        <administration>
            <domain_id>1</domain_id>
            <distributed_logger>
                <enabled>true</enabled>
                <filter_level>WARNING</filter_level>
            </distributed_logger>
            <participant_qos>
                <database>
                    <shutdown_cleanup_period>
                        <sec>0</sec>
                        <nanosec>0</nanosec>
                    </shutdown_cleanup_period>
                </database>
            </participant_qos>
        </administration>

        <!-- This is the Monitoring configuration for all the entities in 
        this routing service, and is required when using Admin Console. -->
        <monitoring>
            <enabled>true</enabled>
            <!-- The domain id where to publish the monitoring information -->
            <domain_id>1</domain_id>
            <!-- How often to publish it -->
            <status_publication_period>
                <sec>5</sec>
                <nanosec>0</nanosec>
            </status_publication_period>
            <!-- How often to compute statistics -->
            <statistics_sampling_period>
                <sec>1</sec>
                <nanosec>0</nanosec>
            </statistics_sampling_period>
            <participant_qos>
                <database>
                    <shutdown_cleanup_period>
                        <sec>0</sec>
                        <nanosec>0</nanosec>
                    </shutdown_cleanup_period>
                </database>
            </participant_qos>
        </monitoring>
        <domain_route name="ModbusRoute">
            <participant name="ModbusParticipant">
                <domain_id>0</domain_id>
                <participant_qos>
                    <database>
                        <shutdown_cleanup_period>
                            <sec>0</sec>
                            <nanosec>0</nanosec>
                        </shutdown_cleanup_period>
                    </database>
                </participant_qos>
            </participant>
            <connection name="CO2_Device_1" plugin_name="AdapterLib::ModbusAdapter">
                <property>
                    <value>
                        <element>
                            <name>modbus_server_ip</name>
                            <value>127.0.0.1</value>
                        </element>
                        <element>
                            <name>modbus_server_port</name>
                            <value>1502</value>
                        </element>
                    </value>
                </property>
                <registered_type name="MBus_WTH_CO2_LCD_ETH_WRITE" type_name="MBus_WTH_CO2_LCD_ETH_WRITE" />
                <registered_type name="MBus_WTH_CO2_LCD_ETH_INPUT" type_name="MBus_WTH_CO2_LCD_ETH_INPUT" />
            </connection>
            <session name="session">
                <route>
                    <route_types>true</route_types>
                    <dds_input participant="ModbusParticipant">
                        <datareader_qos base_name="ModbusAdapterLibrary::MyTypeProfile" />
                        <topic_name>Example StreamWriter</topic_name>
                        <registered_type_name>MBus_WTH_CO2_LCD_ETH_WRITE</registered_type_name>
                    </dds_input>
                    <output connection="CO2_Device_1">
                        <registered_type_name>MBus_WTH_CO2_LCD_ETH_WRITE</registered_type_name>
                        <stream_name>MBus_WTH_CO2_LCD_ETH_configuration</stream_name>
                        <property>
                            <value>
                                <element>
                                    <name>configuration_file_json</name>
                                    <value>MBus_WTH_CO2_LCD_ETH_output_config.json</value>
                                </element>
                            </value>
                        </property>
                    </output>
                </route>
                <!--This configuration is from modbus to DDS-->
                <route>
                    <dds_output participant="ModbusParticipant">
                        <datawriter_qos base_name="ModbusAdapterLibrary::MyTypeProfile" />
                        <topic_name>Example StreamReader</topic_name>
                        <registered_type_name>MBus_WTH_CO2_LCD_ETH_INPUT</registered_type_name>
                    </dds_output>
                    
                    <input connection="CO2_Device_1">
                        <registered_type_name>MBus_WTH_CO2_LCD_ETH_INPUT</registered_type_name>
                        <stream_name>MBus_WTH_CO2_LCD_ETH_input</stream_name>
                        <property>
                            <value>
                                <element>
                                    <name>polling_period_msec</name>
                                    <value>2000</value>
                                </element>
                                <element>
                                    <name>configuration_file_json</name>
                                    <value>MBus_WTH_CO2_LCD_ETH_input_config.json</value>
                                </element>
                            </value>
                        </property>
                    </input>
                </route>
            </session>
        </domain_route>

    </routing_service>
</dds>
